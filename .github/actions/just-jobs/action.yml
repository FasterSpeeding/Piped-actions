name: "Just jobs"
description: "Run a Just job"

inputs:
  task-names:
    description: "Names of the tasks to run"
    required: true
  extra-installs:
    description: "List of extra tools to install alongside Just using mise"
    default: ""
    required: false
  repository:
    description: "The repository's name"
    default: ${{ github.repository }}
  ref:
    description: >
      The branch, tag or SHA to checkout.

runs:
  using: composite
  steps:
    - name: Checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.ref }}
        submodules: true

    - name: Install Mise
      shell: bash
      if: ${{ env.MISE_SETUP == '' }}
      run: |  # THIS CODE IS COPIED FROM MISE-INIT, UPDATE THERE FIRST!!!
        set -eu +o pipefail

        if [[ "$(uname -s)" =~ ^((((CYGWIN)|(MINGW)).*)|(.*Msys))$ ]]
        then
          echo "Installing Mise with Winget"
          winget install jdx.mise --accept-package-agreements --accept-source-agreements
          bin_paths="$USERPROFILE\AppData\Local\mise\shims"
        else
          echo "Installing Mise with sh"
          curl https://mise.run | sh
          bin_paths="$HOME/.local/share/mise/bin"
          echo "$HOME/.local/share/mise/shims" >> $GITHUB_PATH
        fi

        echo "Adding $bin_paths to \$GITHUB_PATH"
        echo "$bin_paths" >> $GITHUB_PATH
        echo "MISE_SETUP=true" >> "$GITHUB_ENV"

    - name: Mise install tools
      shell: bash
      run: |  # THIS CODE IS COPIED FROM MISE-INIT, UPDATE THERE FIRST!!!
        mise trust --all
        mise install just ${{ inputs.extra-installs }}
        mise reshim

    - name: Export Mise env variables
      shell: bash
      run: |  # THIS CODE IS COPIED FROM MISE-INIT, UPDATE THERE FIRST!!!
        set -x
        set -eu +o pipefail

        echo "Exporting Mise env vars"
        mise env

        readarray -d $'\0' ignored < <(
          mise env --redacted --json | jq -c --raw-output0 '. | keys_unsorted | .[]')
        ignore+=("PATH")

        while read -r -d $'\0' key; read -r -d $'\0' value
        do
          skip=false
          for ignored_key in "${ignored[@]}"
          do
            if [[ "$key" == "$ignored_key" ]]
            then
              echo "Ignoring env variable \$$key"
              skip=true
              break
            fi
          done

          if [[ $skip == false ]]
          then
            echo "Exporting env key: \$$key"
            echo "$key=$value" >> "$GITHUB_ENV"
          else
            echo "Ignoring env key: $key"
          fi
        done < <(mise env --json | jq -c --raw-output0 '. | to_entries | map([.key, .value]) | flatten | .[]')

    - name: Run Just jobs
      shell: bash
      run: |
        set -eu +o pipefail

        just ${{ inputs.task-names }}
